name: CI Pipeline

on:
  pull_request:
    types: [opened, edited, reopened, synchronize, review_requested]
    branches:
      - main

  pull_request_review:
    types: [submitted]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Run tests with unittest
      run: |
        python -m unittest discover -s tests -p "test_*.py" -v

  review-check:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pull-requests: read
    steps:
    - name: Check PR approval status
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const prNumber = context.payload.pull_request?.number;
            if (!prNumber) {
              throw new Error("Could not get PR number from context");
            }

            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const approved = reviews.some(review => review.state === 'APPROVED');
            if (!approved) {
              core.setFailed("PR has not been approved");
            }
          } catch (error) {
            core.setFailed(`Failed to check PR approval status: ${error.message}`);
          }

  analysis:
    runs-on: ubuntu-latest
    needs: [build, review-check]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Count lines of code with Cloc
      run: |
        sudo apt-get update && sudo apt-get install -y cloc
        cloc src/ > cloc-report.txt
        cat cloc-report.txt

    - name: SonarQube Analysis
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Run flake8 via Reviewdog
      uses: reviewdog/action-flake8@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        level: error

    - name: Run Black via Reviewdog
      uses: reviewdog/action-black@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        level: info